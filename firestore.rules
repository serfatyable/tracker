rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper auth/role functions
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isTutorOrAdmin() {
      return isSignedIn() && (getUserRole() == 'tutor' || getUserRole() == 'admin');
    }

    function isAdmin() {
      return isSignedIn() && getUserRole() == 'admin';
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    // Users can create, read, and update their own profile document at users/{uid}; tutors/admins can read/update any
    match /users/{uid} {
      allow create: if isOwner(uid);
      allow read: if isOwner(uid) || isTutorOrAdmin();
      allow update: if isOwner(uid) || isTutorOrAdmin();
    }

    // Tasks: owners can read/create/update their own tasks; tutors/admins have broader access
    match /tasks/{taskId} {
      allow read: if isTutorOrAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isTutorOrAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow delete: if isTutorOrAdmin();
    }

    // Rotations: admin-only write; read allowed to admins for now
    match /rotations/{rotationId} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Rotation nodes: admin-only write; read allowed to admins for now
    match /rotationNodes/{nodeId} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Rotation petitions
    match /rotationPetitions/{petitionId} {
      allow read: if isAdmin();
      allow create: if isSignedIn() && request.resource.data.residentId == request.auth.uid && request.resource.data.status == 'pending';
      allow update: if isAdmin();
      allow delete: if false;
    }

    // Assignments: admin-only access for now
    match /assignments/{assignmentId} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}